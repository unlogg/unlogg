# useWindowSize
URL: /unlogg-hooks/ui-and-dom/use-window-size

A custom React hook that tracks the current window size and updates on resize.

`useWindowSize` is a custom React hook that tracks the current window size and provides real-time updates when the window is resized. This is particularly useful for creating responsive components that need to adapt to different screen sizes.

## Example

<ComponentPreview name="use-window-size-ex-01" classNameComponentContainer="min-h-[400px]" />

## Install

<ComponentInstall name="use-window-size" classNameComponentContainer="min-h-[200px]">
  <CLIInstall name="use-window-size" />

  <ManualInstall>
    <Steps>
      <Step>
        Copy and paste the following code into your project
      </Step>

      <ComponentSource name="use-window-size" />

      <Step>
        Update the import paths to match your project setup
      </Step>
    </Steps>
  </ManualInstall>
</ComponentInstall>

## Notes

* Automatically updates when the window is resized
* Returns both width and height as numbers
* Handles the resize event listener cleanup properly
* Initializes with the current window size on mount

## API Reference

### Returns

<TypeTable
  type={{
  width: {
    description: "The current window width in pixels.",
    type: "number",
  },
  height: {
    description: "The current window height in pixels.",
    type: "number",
  },
}}
/>

## Usage

```tsx
import { useWindowSize } from "@/hooks/use-window-size";

function ResponsiveComponent() {
  const { width, height } = useWindowSize();

  if (width < 768) {
    return <MobileView />;
  }

  return <DesktopView />;
}
```

## Use Cases

* **Responsive Components**: Create components that adapt based on screen size without relying solely on CSS media queries
* **Layout Calculations**: Perform calculations that depend on the current viewport size
* **Performance Optimization**: Conditionally render expensive components only on larger screens
* **Dynamic Styling**: Apply different styles or behaviors based on window dimensions
