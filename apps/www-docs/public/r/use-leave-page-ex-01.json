{
  "name": "use-leave-page-ex-01",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/use-leave-page.json"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Card } from \"@/hooks/card\";\nimport { Button } from \"@/hooks/button\";\nimport { Badge } from \"@/hooks/badge\";\nimport { Input } from \"@/hooks/input\";\nimport { useLeavePage } from \"@/hooks/use-leave-page\";\n\nexport default function UseLeavePage_Ex_01() {\n  const isLeavingPage = useLeavePage();\n  const [leaveCount, setLeaveCount] = React.useState(0);\n  const [lastLeaveTime, setLastLeaveTime] = React.useState<Date | null>(null);\n\n  // Track leave events\n  React.useEffect(() => {\n    if (isLeavingPage) {\n      setLeaveCount((prev) => prev + 1);\n      setLastLeaveTime(new Date());\n    }\n  }, [isLeavingPage]);\n\n  return (\n    <div className=\"flex flex-col gap-6 p-6\">\n      <div className=\"text-center\">\n        <h3 className=\"text-lg font-semibold mb-2\">\n          Leave Page Detection Hook\n        </h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          Detects when the user's cursor leaves the browser window\n        </p>\n\n        <div className=\"flex items-center justify-center gap-4 flex-wrap\">\n          <Badge\n            variant={isLeavingPage ? \"destructive\" : \"default\"}\n            className=\"text-sm\"\n          >\n            {isLeavingPage ? \"üö™ Leaving Page\" : \"üëÅÔ∏è On Page\"}\n          </Badge>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm font-medium\">Leave Count:</span>\n            <Badge variant=\"outline\" className=\"font-mono\">\n              {leaveCount}\n            </Badge>\n          </div>\n          {lastLeaveTime && (\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium\">Last Leave:</span>\n              <Badge variant=\"outline\" className=\"font-mono text-xs\">\n                {lastLeaveTime.toLocaleTimeString()}\n              </Badge>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Basic Demo */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">Basic Leave Detection</h4>\n        <BasicLeaveDemo />\n      </Card>\n\n      {/* Exit Intent Popup Demo */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">Exit Intent Popup</h4>\n        <ExitIntentDemo />\n      </Card>\n\n      {/* Auto-Save Demo */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">Auto-Save on Leave</h4>\n        <AutoSaveDemo />\n      </Card>\n\n      {/* Retention Message Demo */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">Retention Message</h4>\n        <RetentionDemo />\n      </Card>\n\n      {/* Instructions */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">How to Test</h4>\n        <div className=\"space-y-3 text-sm\">\n          <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <strong className=\"text-blue-800\">\n              Try these actions to trigger leave detection:\n            </strong>\n            <ul className=\"list-disc list-inside text-blue-700 mt-1 space-y-1\">\n              <li>Move your mouse cursor outside the browser window</li>\n              <li>Move cursor to the browser's address bar</li>\n              <li>Move cursor to browser tabs or bookmarks bar</li>\n              <li>Move cursor to the browser's title bar</li>\n              <li>Alt+Tab to switch to another application</li>\n            </ul>\n          </div>\n          <div className=\"p-3 bg-amber-50 border border-amber-200 rounded-lg\">\n            <strong className=\"text-amber-800\">Note:</strong>\n            <p className=\"text-amber-700 mt-1\">\n              The hook detects when the mouse cursor leaves the document area.\n              Moving the cursor back into the page will reset the leave state.\n            </p>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nfunction BasicLeaveDemo() {\n  const isLeavingPage = useLeavePage();\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-center\">\n        <div\n          className={`text-6xl mb-2 ${isLeavingPage ? \"animate-bounce\" : \"\"}`}\n        >\n          {isLeavingPage ? \"üëã\" : \"üñ±Ô∏è\"}\n        </div>\n        <Badge\n          variant={isLeavingPage ? \"destructive\" : \"default\"}\n          className=\"text-sm\"\n        >\n          {isLeavingPage ? \"Mouse Left Page\" : \"Mouse On Page\"}\n        </Badge>\n      </div>\n\n      <div className=\"p-3 bg-gray-50 border border-gray-200 rounded-lg\">\n        <p className=\"text-sm text-gray-700\">\n          <strong>Status:</strong>{\" \"}\n          {isLeavingPage\n            ? \"Cursor is outside the browser window\"\n            : \"Cursor is within the page area\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction ExitIntentDemo() {\n  const isLeavingPage = useLeavePage();\n  const [showPopup, setShowPopup] = React.useState(false);\n  const [dismissedCount, setDismissedCount] = React.useState(0);\n\n  React.useEffect(() => {\n    if (isLeavingPage && !showPopup) {\n      setShowPopup(true);\n    }\n  }, [isLeavingPage, showPopup]);\n\n  const handleDismiss = () => {\n    setShowPopup(false);\n    setDismissedCount((prev) => prev + 1);\n  };\n\n  if (showPopup) {\n    return (\n      <div className=\"relative\">\n        <div className=\"absolute inset-0 bg-black/20 rounded-lg z-10\" />\n        <div className=\"relative z-20 p-6 bg-white border-2 border-red-300 rounded-lg shadow-lg\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"text-4xl\">üö®</div>\n            <h3 className=\"text-lg font-semibold text-red-800\">\n              Wait! Don't leave yet!\n            </h3>\n            <p className=\"text-sm text-red-700\">\n              You were about to leave this amazing demo. Are you sure you want\n              to go?\n            </p>\n            <div className=\"flex gap-2 justify-center\">\n              <Button onClick={handleDismiss} variant=\"outline\" size=\"sm\">\n                Stay Here\n              </Button>\n              <Button\n                onClick={() => alert(\"Thanks for staying!\")}\n                variant=\"default\"\n                size=\"sm\"\n              >\n                Learn More\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"p-4 bg-gray-100 rounded-lg\">\n          <p className=\"text-xs text-gray-600 text-center\">\n            Background content (popup overlay active)\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n        <p className=\"text-sm text-green-700\">\n          ‚úÖ No exit intent detected. Move your cursor outside the browser\n          window to see the exit intent popup.\n        </p>\n      </div>\n      {dismissedCount > 0 && (\n        <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-sm text-blue-700\">\n            <strong>Popups dismissed:</strong> {dismissedCount}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction AutoSaveDemo() {\n  const isLeavingPage = useLeavePage();\n  const [content, setContent] = React.useState(\"\");\n  const [savedContent, setSavedContent] = React.useState(\"\");\n  const [saveCount, setSaveCount] = React.useState(0);\n  const [lastSaved, setLastSaved] = React.useState<Date | null>(null);\n\n  React.useEffect(() => {\n    if (isLeavingPage && content !== savedContent && content.trim() !== \"\") {\n      // Auto-save when leaving page\n      setSavedContent(content);\n      setSaveCount((prev) => prev + 1);\n      setLastSaved(new Date());\n    }\n  }, [isLeavingPage, content, savedContent]);\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Type something (auto-saves when you leave the page):\n        </label>\n        <Input\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"Start typing...\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-sm text-blue-700\">\n            <strong>Leave Status:</strong>{\" \"}\n            {isLeavingPage ? \"Auto-saving...\" : \"Editing...\"}\n          </p>\n        </div>\n        <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\n          <p className=\"text-sm text-green-700\">\n            <strong>Auto-saves:</strong> {saveCount}\n          </p>\n        </div>\n      </div>\n\n      {lastSaved && (\n        <div className=\"p-3 bg-gray-50 border border-gray-200 rounded-lg\">\n          <p className=\"text-sm text-gray-700\">\n            <strong>Last saved:</strong> {lastSaved.toLocaleTimeString()}\n          </p>\n          <p className=\"text-sm text-gray-700\">\n            <strong>Saved content:</strong> \"{savedContent}\"\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction RetentionDemo() {\n  const isLeavingPage = useLeavePage();\n  const [showRetention, setShowRetention] = React.useState(false);\n  const [interactionCount, setInteractionCount] = React.useState(0);\n\n  React.useEffect(() => {\n    if (isLeavingPage) {\n      setShowRetention(true);\n    } else {\n      setShowRetention(false);\n    }\n  }, [isLeavingPage]);\n\n  const handleInteraction = () => {\n    setInteractionCount((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {showRetention ? (\n        <div className=\"p-4 bg-yellow-50 border border-yellow-300 rounded-lg border-l-4\">\n          <div className=\"flex items-start\">\n            <div className=\"text-yellow-600 text-xl mr-3\">üí°</div>\n            <div className=\"flex-1\">\n              <h5 className=\"font-semibold text-yellow-800 mb-1\">\n                Before you go...\n              </h5>\n              <p className=\"text-sm text-yellow-700 mb-3\">\n                Did you know you can bookmark this page to come back later? We\n                have lots more cool demos to explore!\n              </p>\n              <div className=\"flex gap-2\">\n                <Button size=\"sm\" onClick={handleInteraction}>\n                  Bookmark Page\n                </Button>\n                <Button size=\"sm\" variant=\"outline\" onClick={handleInteraction}>\n                  View More Demos\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <p className=\"text-sm text-green-700\">\n            ‚úÖ Welcome! Move your cursor outside the browser to see a retention\n            message.\n          </p>\n        </div>\n      )}\n\n      {interactionCount > 0 && (\n        <div className=\"p-3 bg-purple-50 border border-purple-200 rounded-lg\">\n          <p className=\"text-sm text-purple-700\">\n            <strong>User interactions:</strong> {interactionCount}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/hooks/unlogg-hooks/use-leave-page-ex-01.tsx",
      "target": "/components/unlogg-ui/use-leave-page-ex-01.tsx"
    }
  ]
}