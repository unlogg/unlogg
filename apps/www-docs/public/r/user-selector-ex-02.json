{
  "name": "user-selector-ex-02",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/user-selector.json"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport AssigneeSelector from \"@/components/ui/user-selector\";\nimport { useState } from \"react\";\n\ntype User = {\n  id: string;\n  email: string;\n  name?: string;\n  avatar?: string;\n};\n\ntype Task = {\n  id: number;\n  title: string;\n  assignee: User | null;\n};\n\nexport default function AssigneeSelector_Ex_02() {\n  const [tasks, setTasks] = useState<Task[]>([\n    { id: 1, title: \"Implement user authentication\", assignee: null },\n    { id: 2, title: \"Design landing page\", assignee: null },\n    { id: 3, title: \"Fix responsive layout bugs\", assignee: null },\n    { id: 4, title: \"Write API documentation\", assignee: null },\n  ]);\n\n  const [users] = useState<User[]>([\n    {\n      id: \"1\",\n      name: \"John Doe\",\n      email: \"john.doe@example.com\",\n      avatar:\n        \"https://github.com/stackzero-labs/ui/blob/main/public/placeholders/user-05.jpg\", // Example avatar URL\n    },\n    {\n      id: \"2\",\n      name: \"Jane Smith\",\n      email: \"jane.smith@example.com\",\n    },\n    {\n      id: \"3\",\n      name: \"Mike Johnson\",\n      email: \"mike.johnson@example.com\",\n    },\n    {\n      id: \"4\",\n      email: \"alice.wilson@example.com\", // No name provided\n    },\n    {\n      id: \"5\",\n      name: \"David Brown\",\n      email: \"david.brown@example.com\",\n    },\n  ]);\n\n  const updateTaskAssignee = (taskId: number, assignee: User | null) => {\n    setTasks((prev) =>\n      prev.map((task) => (task.id === taskId ? { ...task, assignee } : task))\n    );\n  };\n\n  const handleInviteNewUser = () => {\n    console.log(\"Opening invite new user modal...\");\n    // In a real app, this would open a modal or navigate to an invite page\n    alert(\"Invite new user functionality would be implemented here!\");\n  };\n\n  const getUserDisplayName = (user: User) => {\n    return user.name || user.email;\n  };\n\n  const getUserInitials = (user: User) => {\n    if (user.name) {\n      return user.name\n        .split(\" \")\n        .map((n) => n[0])\n        .join(\"\")\n        .toUpperCase()\n        .slice(0, 2);\n    }\n    return user.email[0].toUpperCase();\n  };\n\n  return (\n    <div className=\"mx-auto w-full max-w-3xl space-y-6\">\n      <div className=\"text-center\">\n        <h3 className=\"mb-2 font-semibold\">Task Assignment Manager</h3>\n        <p className=\"text-muted-foreground mb-6 text-sm\">\n          Assign tasks to team members or leave them unassigned\n        </p>\n      </div>\n\n      <div className=\"space-y-4\">\n        {tasks.map((task) => (\n          <div\n            key={task.id}\n            className=\"bg-card flex items-center justify-between rounded-lg border p-4\"\n          >\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium\">{task.title}</h4>\n              {task.assignee && (\n                <div className=\"mt-2 flex items-center gap-2\">\n                  <div className=\"bg-primary text-primary-foreground flex h-5 w-5 items-center justify-center rounded-full text-xs font-medium\">\n                    {getUserInitials(task.assignee)}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm font-medium\">\n                      Assigned to {getUserDisplayName(task.assignee)}\n                    </span>\n                    {task.assignee.name && (\n                      <span className=\"text-muted-foreground text-xs\">\n                        {task.assignee.email}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"ml-4\">\n              <AssigneeSelector\n                users={users}\n                value={task.assignee}\n                onValueChange={(assignee) =>\n                  updateTaskAssignee(task.id, assignee)\n                }\n                onInviteNewUser={handleInviteNewUser}\n                placeholder=\"No assignee\"\n                searchPlaceholder=\"Search team members...\"\n                className=\"w-[220px]\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/components/unlogg-ui/user-selector/user-selector-ex-02.tsx",
      "target": "/components/unlogg-ui/user-selector-ex-02.tsx"
    }
  ]
}