{
  "name": "use-mobile-ex-01",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/use-mobile.json"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Card } from \"@/hooks/card\";\nimport { Button } from \"@/hooks/button\";\nimport { Badge } from \"@/hooks/badge\";\nimport { useMobile } from \"@/hooks/use-mobile\";\n\nexport default function UseMobile_Ex_01() {\n  // Different mobile breakpoints\n  const isMobileDefault = useMobile(); // 768px default\n  const isMobileSmall = useMobile(640); // Small mobile\n  const isMobileLarge = useMobile(1024); // Large mobile/tablet\n  const isMobileCustom = useMobile(480); // Custom breakpoint\n\n  // Current window width for reference\n  const [windowWidth, setWindowWidth] = React.useState(0);\n\n  React.useEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  const breakpoints = [\n    {\n      name: \"Custom (480px)\",\n      value: 480,\n      isMobile: isMobileCustom,\n      description: \"Extra small screens\",\n      color: \"destructive\" as const,\n    },\n    {\n      name: \"Small (640px)\",\n      value: 640,\n      isMobile: isMobileSmall,\n      description: \"Small mobile devices\",\n      color: \"secondary\" as const,\n    },\n    {\n      name: \"Default (768px)\",\n      value: 768,\n      isMobile: isMobileDefault,\n      description: \"Standard mobile breakpoint\",\n      color: \"default\" as const,\n    },\n    {\n      name: \"Large (1024px)\",\n      value: 1024,\n      isMobile: isMobileLarge,\n      description: \"Includes tablets\",\n      color: \"outline\" as const,\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-6 p-6\">\n      <div className=\"text-center\">\n        <h3 className=\"text-lg font-semibold mb-2\">Mobile Detection Hook</h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          Resize your window to see different mobile breakpoints in action\n        </p>\n\n        <div className=\"flex items-center justify-center gap-2 mb-4\">\n          <span className=\"text-sm font-medium\">Current Width:</span>\n          <Badge variant=\"outline\" className=\"font-mono\">\n            {windowWidth}px\n          </Badge>\n        </div>\n      </div>\n\n      {/* Breakpoint cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 max-w-6xl mx-auto\">\n        {breakpoints.map((bp) => (\n          <BreakpointCard\n            key={bp.name}\n            name={bp.name}\n            value={bp.value}\n            isMobile={bp.isMobile}\n            description={bp.description}\n            color={bp.color}\n            currentWidth={windowWidth}\n          />\n        ))}\n      </div>\n\n      {/* Responsive content demo */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">Responsive Content Demo</h4>\n        <ResponsiveDemo\n          isMobileDefault={isMobileDefault}\n          isMobileSmall={isMobileSmall}\n          isMobileLarge={isMobileLarge}\n        />\n      </Card>\n\n      {/* Interactive breakpoint tester */}\n      <Card className=\"w-full max-w-4xl mx-auto p-6\">\n        <h4 className=\"text-md font-semibold mb-4\">\n          Interactive Breakpoint Tester\n        </h4>\n        <BreakpointTester />\n      </Card>\n    </div>\n  );\n}\n\ninterface BreakpointCardProps {\n  name: string;\n  value: number;\n  isMobile: boolean;\n  description: string;\n  color: \"default\" | \"secondary\" | \"destructive\" | \"outline\";\n  currentWidth: number;\n}\n\nfunction BreakpointCard({\n  name,\n  value,\n  isMobile,\n  description,\n  color,\n  currentWidth,\n}: BreakpointCardProps) {\n  const difference = currentWidth - value;\n  const isClose = Math.abs(difference) <= 50;\n\n  return (\n    <div\n      className={`\n      p-4 rounded-lg border-2 transition-all duration-300\n      ${\n        isMobile ? \"border-green-300 bg-green-50\" : \"border-gray-200 bg-gray-50\"\n      }\n      ${isClose ? \"ring-2 ring-blue-200 scale-105\" : \"\"}\n    `}\n    >\n      <div className=\"text-center space-y-2\">\n        <div className=\"flex items-center justify-center gap-2 mb-2\">\n          <div\n            className={`\n            w-3 h-3 rounded-full transition-colors\n            ${isMobile ? \"bg-green-500\" : \"bg-gray-400\"}\n          `}\n          />\n          <h5 className=\"font-semibold text-sm\">{name}</h5>\n        </div>\n\n        <code className=\"text-xs bg-white/70 px-2 py-1 rounded block\">\n          &lt; {value}px\n        </code>\n\n        <p className=\"text-xs text-muted-foreground\">{description}</p>\n\n        <div className=\"space-y-1\">\n          <Badge variant={color} className=\"text-xs\">\n            {isMobile ? \"Mobile\" : \"Desktop\"}\n          </Badge>\n\n          {isClose && (\n            <div className=\"text-xs text-blue-600 font-medium\">\n              {difference > 0 ? `+${difference}` : difference}px from breakpoint\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface ResponsiveDemoProps {\n  isMobileDefault: boolean;\n  isMobileSmall: boolean;\n  isMobileLarge: boolean;\n}\n\nfunction ResponsiveDemo({\n  isMobileDefault,\n  isMobileSmall,\n  isMobileLarge,\n}: ResponsiveDemoProps) {\n  return (\n    <div className=\"space-y-4\">\n      {/* Layout adaptation based on default mobile */}\n      <div\n        className={`\n        grid gap-4 transition-all duration-300\n        ${isMobileDefault ? \"grid-cols-1\" : \"grid-cols-3\"}\n      `}\n      >\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded\">\n          <h6 className=\"font-medium text-blue-800 mb-2\">Layout</h6>\n          <p className=\"text-sm text-blue-700\">\n            {isMobileDefault\n              ? \"Single column (mobile)\"\n              : \"Three columns (desktop)\"}\n          </p>\n        </div>\n\n        <div className=\"p-4 bg-purple-50 border border-purple-200 rounded\">\n          <h6 className=\"font-medium text-purple-800 mb-2\">Navigation</h6>\n          <p className=\"text-sm text-purple-700\">\n            {isMobileDefault ? \"Hamburger menu\" : \"Full navigation\"}\n          </p>\n        </div>\n\n        <div className=\"p-4 bg-green-50 border border-green-200 rounded\">\n          <h6 className=\"font-medium text-green-800 mb-2\">Content</h6>\n          <p className=\"text-sm text-green-700\">\n            {isMobileDefault ? \"Stacked content\" : \"Side-by-side layout\"}\n          </p>\n        </div>\n      </div>\n\n      {/* Conditional content based on different breakpoints */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        {isMobileSmall && (\n          <div className=\"p-4 bg-red-50 border border-red-200 rounded\">\n            <h6 className=\"font-medium text-red-800 mb-2\">Small Mobile Only</h6>\n            <p className=\"text-sm text-red-700\">\n              This content only appears on very small screens (&lt; 640px).\n            </p>\n          </div>\n        )}\n\n        {isMobileDefault && !isMobileSmall && (\n          <div className=\"p-4 bg-orange-50 border border-orange-200 rounded\">\n            <h6 className=\"font-medium text-orange-800 mb-2\">Medium Mobile</h6>\n            <p className=\"text-sm text-orange-700\">\n              This appears between 640px and 768px width.\n            </p>\n          </div>\n        )}\n\n        {isMobileLarge && !isMobileDefault && (\n          <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded\">\n            <h6 className=\"font-medium text-yellow-800 mb-2\">Tablet Range</h6>\n            <p className=\"text-sm text-yellow-700\">\n              This appears between 768px and 1024px width.\n            </p>\n          </div>\n        )}\n\n        {!isMobileLarge && (\n          <div className=\"p-4 bg-indigo-50 border border-indigo-200 rounded\">\n            <h6 className=\"font-medium text-indigo-800 mb-2\">Desktop Only</h6>\n            <p className=\"text-sm text-indigo-700\">\n              This content only appears on desktop screens (â‰¥ 1024px).\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction BreakpointTester() {\n  const [customBreakpoint, setCustomBreakpoint] = React.useState(768);\n  const isCustomMobile = useMobile(customBreakpoint);\n\n  const presetBreakpoints = [320, 480, 640, 768, 1024, 1280, 1440];\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex flex-wrap gap-2 justify-center\">\n        <span className=\"text-sm font-medium self-center\">Quick Presets:</span>\n        {presetBreakpoints.map((bp) => (\n          <Button\n            key={bp}\n            onClick={() => setCustomBreakpoint(bp)}\n            variant={customBreakpoint === bp ? \"default\" : \"outline\"}\n            size=\"sm\"\n          >\n            {bp}px\n          </Button>\n        ))}\n      </div>\n\n      <div className=\"flex items-center gap-4 justify-center\">\n        <label className=\"text-sm font-medium\">Custom Breakpoint:</label>\n        <input\n          type=\"number\"\n          value={customBreakpoint}\n          onChange={(e) => setCustomBreakpoint(Number(e.target.value))}\n          className=\"px-3 py-1 border rounded text-sm w-20\"\n          min=\"200\"\n          max=\"2000\"\n          step=\"10\"\n        />\n        <span className=\"text-xs text-muted-foreground\">pixels</span>\n      </div>\n\n      <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n        <div className=\"text-lg font-semibold mb-2\">\n          useMobile({customBreakpoint})\n        </div>\n        <Badge\n          variant={isCustomMobile ? \"default\" : \"secondary\"}\n          className=\"text-sm\"\n        >\n          {isCustomMobile ? \"Mobile\" : \"Desktop\"}\n        </Badge>\n        <p className=\"text-xs text-muted-foreground mt-2\">\n          Current screen is {isCustomMobile ? \"below\" : \"at or above\"}{\" \"}\n          {customBreakpoint}px\n        </p>\n      </div>\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/hooks/unlogg-hooks/use-mobile-ex-01.tsx",
      "target": "/components/unlogg-ui/use-mobile-ex-01.tsx"
    }
  ]
}