{
  "name": "use-mobile-ex-01",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/use-mobile.json",
    "badge",
    "button",
    "card"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { useMobile } from \"@/hooks/use-mobile\";\nimport * as React from \"react\";\n\nexport default function UseMobile_Ex_01() {\n  // Different mobile breakpoints\n  const isMobileDefault = useMobile(); // 768px default\n  const isMobileSmall = useMobile(640); // Small mobile\n  const isMobileLarge = useMobile(1024); // Large mobile/tablet\n  const isMobileCustom = useMobile(480); // Custom breakpoint\n\n  // Current window width for reference\n  const [windowWidth, setWindowWidth] = React.useState(0);\n\n  React.useEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n\n  const breakpoints = [\n    {\n      name: \"Custom (480px)\",\n      value: 480,\n      isMobile: isMobileCustom,\n      description: \"Extra small screens\",\n      color: \"destructive\" as const,\n    },\n    {\n      name: \"Small (640px)\",\n      value: 640,\n      isMobile: isMobileSmall,\n      description: \"Small mobile devices\",\n      color: \"secondary\" as const,\n    },\n    {\n      name: \"Default (768px)\",\n      value: 768,\n      isMobile: isMobileDefault,\n      description: \"Standard mobile breakpoint\",\n      color: \"default\" as const,\n    },\n    {\n      name: \"Large (1024px)\",\n      value: 1024,\n      isMobile: isMobileLarge,\n      description: \"Includes tablets\",\n      color: \"outline\" as const,\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-6 p-6\">\n      <div className=\"text-center\">\n        <h3 className=\"mb-2 text-lg font-semibold\">Mobile Detection Hook</h3>\n        <p className=\"text-muted-foreground mb-4 text-sm\">\n          Resize your window to see different mobile breakpoints in action\n        </p>\n\n        <div className=\"mb-4 flex items-center justify-center gap-2\">\n          <span className=\"text-sm font-medium\">Current Width:</span>\n          <Badge variant=\"outline\" className=\"font-mono\">\n            {windowWidth}px\n          </Badge>\n        </div>\n      </div>\n\n      {/* Breakpoint cards */}\n      <div className=\"mx-auto grid max-w-6xl grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {breakpoints.map((bp) => (\n          <BreakpointCard\n            key={bp.name}\n            name={bp.name}\n            value={bp.value}\n            isMobile={bp.isMobile}\n            description={bp.description}\n            color={bp.color}\n            currentWidth={windowWidth}\n          />\n        ))}\n      </div>\n\n      {/* Responsive content demo */}\n      <Card className=\"mx-auto w-full max-w-4xl p-6\">\n        <h4 className=\"text-md mb-4 font-semibold\">Responsive Content Demo</h4>\n        <ResponsiveDemo\n          isMobileDefault={isMobileDefault}\n          isMobileSmall={isMobileSmall}\n          isMobileLarge={isMobileLarge}\n        />\n      </Card>\n\n      {/* Interactive breakpoint tester */}\n      <Card className=\"mx-auto w-full max-w-4xl p-6\">\n        <h4 className=\"text-md mb-4 font-semibold\">\n          Interactive Breakpoint Tester\n        </h4>\n        <BreakpointTester />\n      </Card>\n    </div>\n  );\n}\n\ninterface BreakpointCardProps {\n  name: string;\n  value: number;\n  isMobile: boolean;\n  description: string;\n  color: \"default\" | \"secondary\" | \"destructive\" | \"outline\";\n  currentWidth: number;\n}\n\nfunction BreakpointCard({\n  name,\n  value,\n  isMobile,\n  description,\n  color,\n  currentWidth,\n}: BreakpointCardProps) {\n  const difference = currentWidth - value;\n  const isClose = Math.abs(difference) <= 50;\n\n  return (\n    <div\n      className={`rounded-lg border-2 p-4 transition-all duration-300 ${\n        isMobile ? \"border-green-300 bg-green-50\" : \"border-gray-200 bg-gray-50\"\n      } ${isClose ? \"scale-105 ring-2 ring-blue-200\" : \"\"} `}\n    >\n      <div className=\"space-y-2 text-center\">\n        <div className=\"mb-2 flex items-center justify-center gap-2\">\n          <div\n            className={`h-3 w-3 rounded-full transition-colors ${isMobile ? \"bg-green-500\" : \"bg-gray-400\"} `}\n          />\n          <h5 className=\"text-sm font-semibold\">{name}</h5>\n        </div>\n\n        <code className=\"block rounded bg-white/70 px-2 py-1 text-xs\">\n          &lt; {value}px\n        </code>\n\n        <p className=\"text-muted-foreground text-xs\">{description}</p>\n\n        <div className=\"space-y-1\">\n          <Badge variant={color} className=\"text-xs\">\n            {isMobile ? \"Mobile\" : \"Desktop\"}\n          </Badge>\n\n          {isClose && (\n            <div className=\"text-xs font-medium text-blue-600\">\n              {difference > 0 ? `+${difference}` : difference}px from breakpoint\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface ResponsiveDemoProps {\n  isMobileDefault: boolean;\n  isMobileSmall: boolean;\n  isMobileLarge: boolean;\n}\n\nfunction ResponsiveDemo({\n  isMobileDefault,\n  isMobileSmall,\n  isMobileLarge,\n}: ResponsiveDemoProps) {\n  return (\n    <div className=\"space-y-4\">\n      {/* Layout adaptation based on default mobile */}\n      <div\n        className={`grid gap-4 transition-all duration-300 ${isMobileDefault ? \"grid-cols-1\" : \"grid-cols-3\"} `}\n      >\n        <div className=\"rounded border border-blue-200 bg-blue-50 p-4\">\n          <h6 className=\"mb-2 font-medium text-blue-800\">Layout</h6>\n          <p className=\"text-sm text-blue-700\">\n            {isMobileDefault\n              ? \"Single column (mobile)\"\n              : \"Three columns (desktop)\"}\n          </p>\n        </div>\n\n        <div className=\"rounded border border-purple-200 bg-purple-50 p-4\">\n          <h6 className=\"mb-2 font-medium text-purple-800\">Navigation</h6>\n          <p className=\"text-sm text-purple-700\">\n            {isMobileDefault ? \"Hamburger menu\" : \"Full navigation\"}\n          </p>\n        </div>\n\n        <div className=\"rounded border border-green-200 bg-green-50 p-4\">\n          <h6 className=\"mb-2 font-medium text-green-800\">Content</h6>\n          <p className=\"text-sm text-green-700\">\n            {isMobileDefault ? \"Stacked content\" : \"Side-by-side layout\"}\n          </p>\n        </div>\n      </div>\n\n      {/* Conditional content based on different breakpoints */}\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        {isMobileSmall && (\n          <div className=\"rounded border border-red-200 bg-red-50 p-4\">\n            <h6 className=\"mb-2 font-medium text-red-800\">Small Mobile Only</h6>\n            <p className=\"text-sm text-red-700\">\n              This content only appears on very small screens (&lt; 640px).\n            </p>\n          </div>\n        )}\n\n        {isMobileDefault && !isMobileSmall && (\n          <div className=\"rounded border border-orange-200 bg-orange-50 p-4\">\n            <h6 className=\"mb-2 font-medium text-orange-800\">Medium Mobile</h6>\n            <p className=\"text-sm text-orange-700\">\n              This appears between 640px and 768px width.\n            </p>\n          </div>\n        )}\n\n        {isMobileLarge && !isMobileDefault && (\n          <div className=\"rounded border border-yellow-200 bg-yellow-50 p-4\">\n            <h6 className=\"mb-2 font-medium text-yellow-800\">Tablet Range</h6>\n            <p className=\"text-sm text-yellow-700\">\n              This appears between 768px and 1024px width.\n            </p>\n          </div>\n        )}\n\n        {!isMobileLarge && (\n          <div className=\"rounded border border-indigo-200 bg-indigo-50 p-4\">\n            <h6 className=\"mb-2 font-medium text-indigo-800\">Desktop Only</h6>\n            <p className=\"text-sm text-indigo-700\">\n              This content only appears on desktop screens (â‰¥ 1024px).\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction BreakpointTester() {\n  const [customBreakpoint, setCustomBreakpoint] = React.useState(768);\n  const isCustomMobile = useMobile(customBreakpoint);\n\n  const presetBreakpoints = [320, 480, 640, 768, 1024, 1280, 1440];\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex flex-wrap justify-center gap-2\">\n        <span className=\"self-center text-sm font-medium\">Quick Presets:</span>\n        {presetBreakpoints.map((bp) => (\n          <Button\n            key={bp}\n            onClick={() => setCustomBreakpoint(bp)}\n            variant={customBreakpoint === bp ? \"default\" : \"outline\"}\n            size=\"sm\"\n          >\n            {bp}px\n          </Button>\n        ))}\n      </div>\n\n      <div className=\"flex items-center justify-center gap-4\">\n        <label className=\"text-sm font-medium\">Custom Breakpoint:</label>\n        <input\n          type=\"number\"\n          value={customBreakpoint}\n          onChange={(e) => setCustomBreakpoint(Number(e.target.value))}\n          className=\"w-20 rounded border px-3 py-1 text-sm\"\n          min=\"200\"\n          max=\"2000\"\n          step=\"10\"\n        />\n        <span className=\"text-muted-foreground text-xs\">pixels</span>\n      </div>\n\n      <div className=\"rounded-lg bg-gray-50 p-4 text-center\">\n        <div className=\"mb-2 text-lg font-semibold\">\n          useMobile({customBreakpoint})\n        </div>\n        <Badge\n          variant={isCustomMobile ? \"default\" : \"secondary\"}\n          className=\"text-sm\"\n        >\n          {isCustomMobile ? \"Mobile\" : \"Desktop\"}\n        </Badge>\n        <p className=\"text-muted-foreground mt-2 text-xs\">\n          Current screen is {isCustomMobile ? \"below\" : \"at or above\"}{\" \"}\n          {customBreakpoint}px\n        </p>\n      </div>\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/hooks/unlogg-hooks/use-mobile-ex-01.tsx",
      "target": "/components/unlogg-ui/use-mobile-ex-01.tsx"
    }
  ]
}