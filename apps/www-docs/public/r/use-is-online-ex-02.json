{
  "name": "use-is-online-ex-02",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/use-is-online.json",
    "card"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport { Card } from \"@/components/ui/card\";\nimport { useIsOnline } from \"@/hooks/use-is-online\";\n\nexport default function UseIsOnline_Ex_02() {\n  const { networkInfo } = useIsOnline();\n\n  return (\n    <div className=\"flex flex-col gap-6 p-6\">\n      {/* Network Information */}\n      <Card className=\"mx-auto w-full max-w-4xl p-6\">\n        <h4 className=\"text-md mb-4 font-semibold\">Network Information</h4>\n        <NetworkInfoDemo networkInfo={networkInfo} />\n      </Card>\n    </div>\n  );\n}\n\nfunction NetworkInfoDemo({ networkInfo }: { networkInfo: any }) {\n  if (!networkInfo) {\n    return (\n      <div className=\"rounded-lg border border-yellow-200 bg-yellow-50 p-4\">\n        <p className=\"text-sm text-yellow-700\">\n          ⚠️ Network Information API is not supported in this browser. Only\n          basic online/offline detection is available.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {networkInfo.effectiveType && (\n          <div className=\"rounded-lg border border-blue-200 bg-blue-50 p-3\">\n            <p className=\"text-sm font-medium text-blue-800\">Effective Type</p>\n            <p className=\"font-mono text-lg text-blue-600\">\n              {networkInfo.effectiveType.toUpperCase()}\n            </p>\n          </div>\n        )}\n\n        {networkInfo.downlink !== undefined && (\n          <div className=\"rounded-lg border border-green-200 bg-green-50 p-3\">\n            <p className=\"text-sm font-medium text-green-800\">Downlink Speed</p>\n            <p className=\"font-mono text-lg text-green-600\">\n              {networkInfo.downlink} Mbps\n            </p>\n          </div>\n        )}\n\n        {networkInfo.rtt !== undefined && (\n          <div className=\"rounded-lg border border-purple-200 bg-purple-50 p-3\">\n            <p className=\"text-sm font-medium text-purple-800\">\n              Round Trip Time\n            </p>\n            <p className=\"font-mono text-lg text-purple-600\">\n              {networkInfo.rtt} ms\n            </p>\n          </div>\n        )}\n\n        {networkInfo.saveData !== undefined && (\n          <div className=\"rounded-lg border border-orange-200 bg-orange-50 p-3\">\n            <p className=\"text-sm font-medium text-orange-800\">Data Saver</p>\n            <p className=\"font-mono text-lg text-orange-600\">\n              {networkInfo.saveData ? \"Enabled\" : \"Disabled\"}\n            </p>\n          </div>\n        )}\n\n        {networkInfo.type && (\n          <div className=\"rounded-lg border border-gray-200 bg-gray-50 p-3\">\n            <p className=\"text-sm font-medium text-gray-800\">Connection Type</p>\n            <p className=\"font-mono text-lg text-gray-600\">\n              {networkInfo.type}\n            </p>\n          </div>\n        )}\n\n        {networkInfo.downlinkMax !== undefined && (\n          <div className=\"rounded-lg border border-red-200 bg-red-50 p-3\">\n            <p className=\"text-sm font-medium text-red-800\">Max Downlink</p>\n            <p className=\"font-mono text-lg text-red-600\">\n              {networkInfo.downlinkMax} Mbps\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/hooks/unlogg-hooks/use-is-online-ex-02.tsx",
      "target": "/components/unlogg-ui/use-is-online-ex-02.tsx"
    }
  ]
}