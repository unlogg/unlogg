{
  "name": "combobox-add-ex-03",
  "type": "registry:example",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/combobox-add.json"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport ComboboxAdd from \"@/components/ui/combobox-add\";\nimport { useState } from \"react\";\n\ntype ProjectStatus = {\n  value: string;\n  label: string;\n  color?: string;\n  description?: string;\n};\n\ntype Project = {\n  id: number;\n  name: string;\n  status: ProjectStatus | null;\n};\n\nexport default function Combobox_Add_Ex_03() {\n  const [projects, setProjects] = useState<Project[]>([\n    { id: 1, name: \"Mobile App Redesign\", status: null },\n    { id: 2, name: \"API Documentation Update\", status: null },\n    { id: 3, name: \"User Authentication System\", status: null },\n  ]);\n\n  const [statusItems, setStatusItems] = useState<ProjectStatus[]>([\n    {\n      value: \"planning\",\n      label: \"Planning\",\n      color: \"#8b5cf6\",\n      description: \"Requirements gathering and initial design phase\",\n    },\n    {\n      value: \"development\",\n      label: \"Development\",\n      color: \"#3b82f6\",\n      description: \"Active coding and implementation work\",\n    },\n    {\n      value: \"testing\",\n      label: \"Testing\",\n      color: \"#f59e0b\",\n      description: \"Quality assurance and bug fixing phase\",\n    },\n    {\n      value: \"deployment\",\n      label: \"Deployment\",\n      color: \"#10b981\",\n      description: \"Ready for production release\",\n    },\n    {\n      value: \"maintenance\",\n      label: \"Maintenance\",\n      color: \"#6b7280\",\n      description: \"Ongoing support and minor updates\",\n    },\n    {\n      value: \"archived\",\n      label: \"Archived\",\n      color: \"#dc2626\",\n      description: \"Project completed or discontinued\",\n    },\n  ]);\n\n  const handleAddNewStatus = (newStatus: ProjectStatus) => {\n    setStatusItems((prev) => [...prev, newStatus]);\n  };\n\n  const updateProjectStatus = (\n    projectId: number,\n    status: ProjectStatus | null\n  ) => {\n    setProjects((prev) =>\n      prev.map((project) =>\n        project.id === projectId ? { ...project, status } : project\n      )\n    );\n  };\n\n  return (\n    <div className=\"mx-auto w-full max-w-3xl space-y-6\">\n      <div className=\"text-center\">\n        <h3 className=\"mb-2 font-semibold\">Project Status Tracker</h3>\n        <p className=\"text-muted-foreground mb-6 text-sm\">\n          Track project progress with detailed status descriptions\n        </p>\n      </div>\n\n      <div className=\"space-y-4\">\n        {projects.map((project) => (\n          <div\n            key={project.id}\n            className=\"bg-card flex items-center justify-between rounded-lg border p-4\"\n          >\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium\">{project.name}</h4>\n              {project.status && (\n                <div className=\"mt-2 flex items-start gap-2\">\n                  <div\n                    className=\"mt-1 h-2 w-2 flex-shrink-0 rounded-full\"\n                    style={{ backgroundColor: project.status.color }}\n                  />\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm font-medium\">\n                      {project.status.label}\n                    </span>\n                    {project.status.description && (\n                      <span className=\"text-muted-foreground text-xs\">\n                        {project.status.description}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"ml-4\">\n              <ComboboxAdd\n                items={statusItems}\n                value={project.status}\n                onValueChange={(status) =>\n                  updateProjectStatus(project.id, status)\n                }\n                onAddItem={handleAddNewStatus}\n                placeholder=\"Set status\"\n                searchPlaceholder=\"Search or add status...\"\n                className=\"w-[200px]\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"bg-muted/50 mt-6 rounded-lg p-4\">\n        <h4 className=\"mb-3 font-medium\">Available Status Types</h4>\n        <div className=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\n          {statusItems.map((status) => (\n            <div\n              key={status.value}\n              className=\"bg-background flex items-start gap-3 rounded-lg border p-3\"\n            >\n              {status.color && (\n                <div\n                  className=\"mt-0.5 h-3 w-3 flex-shrink-0 rounded-full\"\n                  style={{ backgroundColor: status.color }}\n                />\n              )}\n              <div className=\"flex flex-col\">\n                <span className=\"text-sm font-medium\">{status.label}</span>\n                {status.description && (\n                  <span className=\"text-muted-foreground text-xs\">\n                    {status.description}\n                  </span>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"text-muted-foreground space-y-1 text-center text-xs\">\n        <p>• Status descriptions provide context for each project phase</p>\n        <p>• Create custom statuses with meaningful descriptions</p>\n        <p>• Visual indicators help identify project stages quickly</p>\n        <p>• Descriptions appear in both the trigger and dropdown</p>\n      </div>\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/components/unlogg-ui/combobox-add/combobox-add-ex-03.tsx",
      "target": "/components/unlogg-ui/combobox-add-ex-03.tsx"
    }
  ]
}