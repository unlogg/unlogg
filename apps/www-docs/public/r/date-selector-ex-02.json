{
  "name": "date-selector-ex-02",
  "type": "registry:example",
  "dependencies": [
    "lucide-react",
    "chrono-node"
  ],
  "registryDependencies": [
    "https://unlogg.com/r/date-selector.json"
  ],
  "files": [
    {
      "type": "registry:example",
      "content": "\"use client\";\n\nimport DateSelector from \"@/components/ui/date-selector\";\nimport { useState } from \"react\";\n\ntype Task = {\n  id: number;\n  title: string;\n  dueDate: Date | null;\n  priority: \"low\" | \"medium\" | \"high\";\n};\n\nexport default function DateSelector_Ex_01() {\n  const [tasks, setTasks] = useState<Task[]>([\n    { id: 1, title: \"Review pull request\", dueDate: null, priority: \"high\" },\n    { id: 2, title: \"Update documentation\", dueDate: null, priority: \"medium\" },\n    { id: 3, title: \"Fix minor bug\", dueDate: null, priority: \"low\" },\n  ]);\n\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n  const updateTaskDueDate = (taskId: number, dueDate: Date | null) => {\n    setTasks((prev) =>\n      prev.map((task) => (task.id === taskId ? { ...task, dueDate } : task))\n    );\n  };\n\n  const formatRelativeTime = (date: Date) => {\n    const now = new Date();\n    const diffMs = date.getTime() - now.getTime();\n    const diffMinutes = Math.round(diffMs / (1000 * 60));\n    const diffHours = Math.round(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.round(diffMs / (1000 * 60 * 60 * 24));\n\n    if (diffMinutes < 60) {\n      return `${diffMinutes} minute${diffMinutes !== 1 ? \"s\" : \"\"}`;\n    } else if (diffHours < 24) {\n      return `${diffHours} hour${diffHours !== 1 ? \"s\" : \"\"}`;\n    } else {\n      return `${diffDays} day${diffDays !== 1 ? \"s\" : \"\"}`;\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return \"bg-red-100 text-red-800 border-red-200\";\n      case \"medium\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"low\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <div className=\"mx-auto w-full max-w-2xl space-y-6\">\n      <div className=\"space-y-4\">\n        <h4 className=\"font-medium\">Task List</h4>\n        {tasks.map((task) => (\n          <div\n            key={task.id}\n            className=\"bg-card flex items-center justify-between rounded-lg border p-4\"\n          >\n            <div className=\"flex-1\">\n              <div className=\"flex items-center gap-3\">\n                <h5 className=\"font-medium\">{task.title}</h5>\n                <span\n                  className={`rounded-full border px-2 py-1 text-xs ${getPriorityColor(task.priority)}`}\n                >\n                  {task.priority}\n                </span>\n              </div>\n              {task.dueDate && (\n                <div className=\"text-muted-foreground mt-2 text-sm\">\n                  Due:{\" \"}\n                  {new Intl.DateTimeFormat(\"en-US\", {\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                  }).format(task.dueDate)}{\" \"}\n                  ({formatRelativeTime(task.dueDate)} from now)\n                </div>\n              )}\n            </div>\n\n            <div className=\"ml-4\">\n              <DateSelector\n                value={task.dueDate}\n                onValueChange={(date) => updateTaskDueDate(task.id, date)}\n                placeholder=\"Set due date\"\n                className=\"w-[200px]\"\n                showRelativeTime={true}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "path": "/../../packages/ui/src/components/unlogg-ui/date-selector/date-selector-ex-02.tsx",
      "target": "/components/unlogg-ui/date-selector-ex-02.tsx"
    }
  ]
}